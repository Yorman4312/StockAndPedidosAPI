/**
 * USERMODEL.JS - MODELO DE BASE DE DATOS (MONGOOSE)
 * ==================================================
 * 
 * Define el esquema y modelo de Mongoose para la colecci칩n
 * "User". Representa a los usuarios registrados en el sistema.
 * 
 * CAMPOS PRINCIPALES:
 * - name: Nombre del usuario (obligatorio, longitud entre 3 y 25)
 * - email: Correo electr칩nico 칰nico y obligatorio 
 *          (m칤nimo 8 caracteres, m치ximo 50, validado con regex)
 * - password: Contrase침a encriptada del usuario (obligatoria, m칤nimo 4 caracteres)
 * - rol: Rol del usuario (ej. "admin", "cliente") (obligatorio, m칤nimo 2 caracteres)
 * - timestamps: Agrega autom치ticamente los campos createdAt y updatedAt
 * 
 * 游뚿 VALIDACIONES:
 * - `name`: requerido, entre 3 y 25 caracteres
 * - `email`: requerido, 칰nico, formato v치lido de correo
 * - `password`: requerido, m칤nimo 4 caracteres
 * - `rol`: requerido, m칤nimo 2 caracteres
 * 
 * CASOS DE USO:
 * - Registrar usuarios en el sistema
 * - Consultar informaci칩n de usuarios
 * - Autenticaci칩n y autorizaci칩n (junto con contrase침a encriptada y JWT)
 * - Asignaci칩n de permisos seg칰n el rol
 * 
 * PATRONES Y PRINCIPIOS:
 * - Infraestructura: define la persistencia de usuarios en MongoDB
 * - Clean Architecture: corresponde a la implementaci칩n de almacenamiento
 *   de la entidad de dominio "User"
 */

import mongoose from "mongoose";

const UserSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
    minlength: 3,
    maxlength: 25
  },

  email: {
    type: String,
    required: true,
    unique: true,
    minlength: 8,
    maxlength: 50,
    match: /.+\@.+\..+/
  },

  password: {
    type: String,
    required: true,
    minlength: 4
  },

  rol: {
    type: String,
    required: true,
    minlength: 2
  },
}, {
  timestamps: true // a침ade createdAt y updatedAt autom치ticamente
});

// Exporta el modelo de Mongoose para interactuar con la colecci칩n "User"
export const UserModel = mongoose.model("User", UserSchema);
